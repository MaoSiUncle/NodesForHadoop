1.第一个坑

debian 安装java:
先判断系统里有没有java
java -version//此处注意系统默认
正常思路：

java 下载url：http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.tar.gz

点开 oracle java下载的列表 
会有让你选择一个Agreement的checkbox 这个会有cookie的添加-操作(
oraclelicense=accept-securebackup-cookie)
根据cookie 会在html的java下载链接是否显示真实的url。

wget 下载jdk 如果直接根据url 下载 网站会根据cookie判断 然后重定向到一个html页面。所以wget下载的都是html。。
tar 解压问题 基本是 不能够format。

解决方法：wget --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.tar.gz

附加知识：
java -version //显示java版本

whereis java //查找与java有关的路径

~/.bashrc 修改环境变量。(各种export)

2.第二个坑
wget 下载一个任务  直接用ctrl+c 再次执行wget的时候 发现上次下载的任务还在。。
所以
pkill -9 wget //直接干掉。

3.java版本更新。
系统默认会安装openjdk 在/usr/lib/jvm
查看当前系统 所有版本 
update-alternatives --display java

更新当前系统使用的java 
命令：alternatives --install <链接> <名称> <路径> <优先度>
update-alternatives  --install  /usr/bin/java java yoururl 300
备注：通常系统默认装的openjdk的优先级是100  此处300 只需设置成display中比所有数字大即可。
上述命令分别对应 java javah javac jar等。
eg：
sudo update-alternatives --install /usr/bin/java java /usr/java/jdk1.8.0_11/bin/java 300
sudo update-alternatives --install /usr/bin/jar jar   /usr/java/jdk1.8.0_11/bin/jar 300
sudo update-alternatives --install /usr/bin/javah javah /usr/java/jdk1.8.0_11/bin/javah 300
sudo update-alternatives --install /usr/bin/javap javap /usr/java/jdk1.8.0_11/bin/javap 300

补充知识：
jps 查看java进程工具

pwd 查看当前路径。

hadoop Streaming 作业
hadoop jar <jar> [mainClass] args...

4./etc/hosts 域名或者主机名
局域网 ：ip machinename
hadoop：默认是从hosts中读取对应的hostname 
hdfs dfsadmin -report 读取不到节点(大部分是因为hosts文件配置问题)

5.一共不到10个配置文件。。注意看报错信息 基本上xml配置中的错误 都能看出来。
6.safe mode is on
基本上是 正在执行过程中 ctrl+c了。。
如果不是其他错误 safe mode 在5s后会自动关闭。
强制关闭safe mode
hdfs dfsadmin -safemode leave(版本比新的hadoop)

6.配置过程中 基本的只需要 从master机器配置单向的ssh即可。(实际情况中大部分都是单向的。当然你也可以进行双向配置。)

7.scp -r 本地文件夹 账户@目标ip或者主机名：目标文件夹
scp(一堆。。。常用的 -r -v -l -P(大写))
-1  强制scp命令使用协议ssh1  
-2  强制scp命令使用协议ssh2  
-4  强制scp命令只使用IPv4寻址  
-6  强制scp命令只使用IPv6寻址  
-B  使用批处理模式（传输过程中不询问传输口令或短语）  
-C  允许压缩。（将-C标志传递给ssh，从而打开压缩功能）  
-p 保留原文件的修改时间，访问时间和访问权限。  
-q  不显示传输进度条。  
-r  递归复制整个目录。  
-v 详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。   
-c cipher  以cipher将数据传输进行加密，这个选项将直接传递给ssh。   
-F ssh_config  指定一个替代的ssh配置文件，此参数直接传递给ssh。  
-i identity_file  从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。    
-l limit  限定用户所能使用的带宽，以Kbit/s为单位。     
-o ssh_option  如果习惯于使用ssh_config(5)中的参数传递方式，   
-P port  注意是大写的P, port是指定数据传输用到的端口号   
-S program  指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。





